# ==============================================
# GRC Compliance Mapping - Environment Variables
# ==============================================
# Copy this file to .env and configure your values

# -----------------
# PostgreSQL Database
# -----------------
POSTGRES_USER=postgres
POSTGRES_PASSWORD=changeme_secure_password
POSTGRES_DB=grc_compliance
POSTGRES_PORT=5432

# Database connection URL (auto-generated in Docker Compose)
# For local dev: postgresql://postgres:postgres@localhost:5432/grc_compliance
# For Docker: postgresql://postgres:postgres@postgres:5432/grc_compliance
DATABASE_URL=postgresql://postgres:postgres@postgres:5432/grc_compliance

# -----------------
# Backend API
# -----------------
BACKEND_PORT=8000

# -----------------
# Frontend
# -----------------
FRONTEND_PORT=3000

# Backend API URL (accessed by frontend)
# For local dev: http://localhost:8000
# For Docker: http://backend:8000 (internal) or http://localhost:8000 (external)
# For production: https://your-backend-domain.com
VITE_API_URL=http://localhost:8000

# -----------------
# LLM API Keys (Optional - for Claude/Gemini)
# -----------------
# Uncomment if you want to use Claude API
# ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Uncomment if you want to use Gemini API
# GEMINI_API_KEY=your_gemini_api_key_here

# -----------------
# Application Settings
# -----------------
# Python environment
PYTHONUNBUFFERED=1

# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# -----------------
# Security (Production only)
# -----------------
# SECRET_KEY=generate_a_random_secret_key_for_production
# ALLOWED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com
